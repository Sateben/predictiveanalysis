/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cloudcompx1;
import java.awt.List;
import java.io.BufferedReader;
import java.io.File; 
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException; 
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
public class CloudCompX2 extends javax.swing.JDialog {

    static double mean_x = 0;
    static double mean_y = 0;
    static double slope1 = 0;
    static double y_intercept = 0;
    
    public CloudCompX2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Max_Threshold = new javax.swing.JTextField();
        Phase_1_max = new javax.swing.JTextField();
        Phase_2_max = new javax.swing.JTextField();
        Min_Threshold = new javax.swing.JTextField();
        Phase_3_max = new javax.swing.JTextField();
        Phase_1_min = new javax.swing.JTextField();
        Phase_2_min = new javax.swing.JTextField();
        Phase_3_min = new javax.swing.JTextField();
        Done_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Maximum Threshold");

        jLabel2.setText("Minimum Threshold");

        jLabel3.setText("Phase 1");

        jLabel4.setText("Phase 2");

        jLabel5.setText("Phase 3");

        jLabel6.setText("Phase 1");

        jLabel7.setText("Phase 2");

        jLabel8.setText("Phase 3");

        Max_Threshold.setText(" ");
        Max_Threshold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Max_ThresholdActionPerformed(evt);
            }
        });

        Phase_1_max.setText(" ");
        Phase_1_max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phase_1_maxActionPerformed(evt);
            }
        });

        Phase_2_max.setText(" ");
        Phase_2_max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phase_2_maxActionPerformed(evt);
            }
        });

        Min_Threshold.setText(" ");
        Min_Threshold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Min_ThresholdActionPerformed(evt);
            }
        });

        Phase_3_max.setText(" ");
        Phase_3_max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phase_3_maxActionPerformed(evt);
            }
        });

        Phase_1_min.setText(" ");
        Phase_1_min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phase_1_minActionPerformed(evt);
            }
        });

        Phase_2_min.setText(" ");
        Phase_2_min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phase_2_minActionPerformed(evt);
            }
        });

        Phase_3_min.setText(" ");
        Phase_3_min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phase_3_minActionPerformed(evt);
            }
        });

        Done_btn.setText("Done");
        Done_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Done_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Max_Threshold, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Phase_1_max, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Phase_2_max, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Min_Threshold, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Phase_3_max, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Phase_1_min, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Phase_2_min, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Phase_3_min, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(Done_btn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Max_Threshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Phase_1_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Phase_2_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Phase_3_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Min_Threshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Phase_1_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Phase_2_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Phase_3_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Done_btn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Max_ThresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Max_ThresholdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Max_ThresholdActionPerformed

    private void Phase_1_maxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_1_maxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Phase_1_maxActionPerformed

    private void Phase_2_maxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_2_maxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Phase_2_maxActionPerformed

    private void Min_ThresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Min_ThresholdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Min_ThresholdActionPerformed

    private void Phase_3_maxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_3_maxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Phase_3_maxActionPerformed

    private void Phase_1_minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_1_minActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Phase_1_minActionPerformed

    private void Phase_2_minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_2_minActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Phase_2_minActionPerformed

    private void Phase_3_minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_3_minActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Phase_3_minActionPerformed

    private void Done_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Done_btnActionPerformed
        // TODO add your handling code here:
        
        Double Max_Threshold1 = Double.parseDouble(Max_Threshold.getText());
        Double Phase_1_max1 = Double.parseDouble(Phase_1_max.getText());
        Double Phase_2_max1 = Double.parseDouble(Phase_2_max.getText());
        Double Phase_3_max1 = Double.parseDouble(Phase_3_max.getText());
        Double Min_Threshold2 = Double.parseDouble(Min_Threshold.getText());
        Double Phase_1_min2 = Double.parseDouble(Phase_1_min.getText());
        Double Phase_2_min2 = Double.parseDouble(Phase_2_min.getText());
        Double Phase_3_min2 = Double.parseDouble(Phase_3_min.getText());

        System.out.println("Testing");
                System.out.println("Testing2");

                        System.out.println(slope1);

                        System.out.println(y_intercept);

        if(slope1 > 0)
        {
            Double time_to_threshold = (Max_Threshold1-y_intercept)/slope1;
            System.out.println("The time taken to reach the max threshold is " +time_to_threshold);
            Double time_to_phase_1 = (Phase_1_max1-y_intercept)/slope1;
            System.out.println("The time taken to reach the Phase 1 is " +time_to_phase_1);
            Double time_to_phase_2 = (Phase_2_max1-y_intercept)/slope1;
            System.out.println("The time taken to reach the Phase 2 is " +time_to_phase_2);

            Double time_to_phase_3 = (Phase_3_max1-y_intercept)/slope1;            
            System.out.println("The time taken to reach the Phase 3 is " +time_to_phase_3);

        }
        else if(slope1 < 0)
        {
            Double time_to_threshold = (Min_Threshold2-y_intercept)/slope1;
            System.out.println("The time taken to reach the max threshold is " +time_to_threshold);
            Double time_to_phase_1 = (Phase_1_min2-y_intercept)/slope1;
            System.out.println("The time taken to reach the Phase 1 is " +time_to_phase_1);
            Double time_to_phase_2 = (Phase_2_min2-y_intercept)/slope1;
            System.out.println("The time taken to reach the Phase 2 is " +time_to_phase_2);

            Double time_to_phase_3 = (Phase_3_min2-y_intercept)/slope1;            
            System.out.println("The time taken to reach the Phase 3 is " +time_to_phase_3);

        }
        else
        {
            System.out.println("Testing3");
        }
    }//GEN-LAST:event_Done_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CloudCompX2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CloudCompX2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CloudCompX2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CloudCompX2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CloudCompX2 dialog = new CloudCompX2(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
        
         BufferedReader Buff_reader1 = null; 
      BufferedReader Buff_reader2 = null; 

      File file = new File("/Users/krrishdholakia/Desktop/CPUvsTime.txt");
      
        try {
            Buff_reader1 = new BufferedReader(new FileReader(file));
            Buff_reader2 = new BufferedReader(new FileReader(file));

            String line = null; 
            int count1 = 0;
            
            ArrayList<String> listLines = new ArrayList<String>();

            System.out.println("Test1");
            
            while(Buff_reader1.readLine()!=null)
            {count1++;}
            
            System.out.println(""+count1);

            int[] CPU_usage = new int[count1];
            int[] time_taken = new int[count1];  
            
                        System.out.println("Test2");

            while((line = Buff_reader2.readLine())!=null)
            { 
                listLines.add(line);
                System.out.println(line);
            }
            
            for(int count = 0; count < count1; count++)
            {
                String[] splitter = listLines.get(count).split(" ");
               
                CPU_usage[count] = Integer.parseInt(splitter[0]);
                time_taken[count] = Integer.parseInt(splitter[1]);
                
                System.out.println(CPU_usage[count] + " " + time_taken[count]);
            }
            
             slope1 = slope(CPU_usage,time_taken);
            
            System.out.println(slope1);
            
            y_intercept = y_intercept(slope1);
            
                        System.out.println(y_intercept);
                        


            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(CloudCompX1.class.getName()).log(Level.SEVERE, null, ex);
        }catch (IOException ex) {
              Logger.getLogger(CloudCompX1.class.getName()).log(Level.SEVERE, null, ex);
          }
      
    
    }
    
     
    public static double slope (int[] CPU_usage, int[] time_taken)
    {
        
        double sum_x = 0;
        double sum_y = 0;
        double number_of_elements = CPU_usage.length;
        double xy = 0;
        double x_square = 0;
       
        
        for(int count = 0; count < CPU_usage.length; count++)
        {
            sum_x = CPU_usage[count] + sum_x;
            sum_y = time_taken[count] + sum_y;
            
            xy = CPU_usage[count]*time_taken[count]+xy;
            
            x_square = CPU_usage[count]*CPU_usage[count]+x_square;
        }
        
        System.out.println(number_of_elements);
        
        mean_x = sum_x/number_of_elements;
                System.out.println(mean_x);

        mean_y = sum_y/number_of_elements;
                        System.out.println(mean_y);

        double mean_xy = xy/number_of_elements;
                                System.out.println(mean_xy);

        double mean_x_square = x_square/number_of_elements;
                                        System.out.println(mean_x_square);
                                        
        double mean_x_mean_y = mean_x*mean_y;                              
        System.out.println(mean_x_mean_y);
        
        double mean_square_x = mean_x*mean_x;
        System.out.println(mean_square_x);
        double slope1 = ((mean_x_mean_y)-mean_xy);
                System.out.println(slope1);

        double slope2 = ((mean_square_x)-(mean_x_square));
                        System.out.println(slope2);

        double slope3 = (slope1)/slope2;
                                System.out.println(slope3);

        
        return slope3;

    }
    
    
    public static double y_intercept (double slope)
    {
        double b = mean_y - ((mean_x)*slope);
        
        return b;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Done_btn;
    private javax.swing.JTextField Max_Threshold;
    private javax.swing.JTextField Min_Threshold;
    private javax.swing.JTextField Phase_1_max;
    private javax.swing.JTextField Phase_1_min;
    private javax.swing.JTextField Phase_2_max;
    private javax.swing.JTextField Phase_2_min;
    private javax.swing.JTextField Phase_3_max;
    private javax.swing.JTextField Phase_3_min;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
}
